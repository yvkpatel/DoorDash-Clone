{"ast":null,"code":"var _jsxFileName = \"/Users/yash/DoorDash-Clone/gui-module/src/components/general/login/Login.js\",\n    _s = $RefreshSig$();\n\n/**\n * This is the login screen\n *\n * Users of all types can login here. They will be redirected based on their user details\n */\nimport { React, useState } from \"react\";\nimport \"./Login.css\";\nimport Button from \"react-bootstrap/Button\";\nimport GenHeader from \"../../GenHeader.js\";\nimport LoginForm from \"./LoginForm\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [authenticate, setAuthenticate] = useState(\"false\"); //true when user exists in database\n\n  const [userType, setUserType] = useState(\"\"); //customer, driver, restuarant\n\n  const [userID, setUserID] = useState(\"\");\n  const history = useHistory(); //Handles the submission of login details\n\n  const submitLogin = details => {\n    var obj = new Object();\n    obj.username = details.email;\n    obj.passHash = details.password; //testing purposes\n\n    console.log(details);\n    fetchAuthentication(obj);\n    setUserType(details.userType); //Determine what to do based on the user type\n\n    if (userType == \"Customer\") {\n      fetchCustomer(details.email);\n      history.push(\"/customer-dashboard\");\n      return;\n    } else if (userType == \"Restaurant\") {\n      fetchRestauant(details.email);\n      history.push(\"/restaurant-dash\");\n      return;\n    } else if (userType == \"Driver\") {\n      fetchDriver(details.email);\n      history.push(\"/driver-dash\");\n      return;\n    }\n  }; //Calls database to get the authenticate the user\n  //TODO: CURRENTLY NOT WORKING TO AUTHENTICATE USER - ASSUME TRUE FOR ALL CALLS FOR MVP\n\n\n  const fetchAuthentication = obj => {\n    setAuthenticate(\"true\"); // const reqPar = {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify(obj)\n    // }\n    // console.log(reqPar.body);\n    // fetch(\"/\", reqPar).then(res => res.json())\n    //   .then(data => setAuthenticate(data.reply))\n    //   .catch(err => console.log(err));\n  }; //Gets Customer Details\n\n\n  const fetchCustomer = username => {\n    const res = fetch(\"/customer/user/\" + username).then(resp => resp.json()).then(data => setUserID(data._Customer__id)).catch(err => console.log(err));\n  }; //Gets Restaurant Details\n\n\n  const fetchRestauant = username => {\n    const res = fetch(\"/restaurant/user/\" + username).then(resp => resp.json()).then(data => setUserID(data._Restaurant__id)).catch(err => console.log(err));\n  }; //Gets Driver Details\n\n\n  const fetchDriver = username => {\n    const res = fetch(\"/driver/user/\" + username).then(resp => resp.json()).then(data => setUserID(data._Driver__id)).then(history.push(\"/customer-dashboard\", {\n      state: userID\n    })).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    \"data-testid\": \"login-1\",\n    children: [/*#__PURE__*/_jsxDEV(GenHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        onLogin: submitLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"or\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signupText\",\n        children: \"Sign up as\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        href: \"/customer-signup\",\n        variant: \"primary\",\n        \"data-testid\": \"customer-signup\",\n        children: \"Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        href: \"/driver-signup\",\n        variant: \"primary\",\n        \"data-testid\": \"driver-signup\",\n        children: \"Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        href: \"/restaurant-regis\",\n        variant: \"primary\",\n        \"data-testid\": \"restaurant-signup\",\n        children: \"Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"4cDZxbo/lkwhpk39KsZ+2TYXVqQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/yash/DoorDash-Clone/gui-module/src/components/general/login/Login.js"],"names":["React","useState","Button","GenHeader","LoginForm","useHistory","Login","authenticate","setAuthenticate","userType","setUserType","userID","setUserID","history","submitLogin","details","obj","Object","username","email","passHash","password","console","log","fetchAuthentication","fetchCustomer","push","fetchRestauant","fetchDriver","res","fetch","then","resp","json","data","_Customer__id","catch","err","_Restaurant__id","_Driver__id","state","display","alignItems","justifyContent"],"mappings":"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","sourcesContent":["/**\n * This is the login screen\n *\n * Users of all types can login here. They will be redirected based on their user details\n */\nimport { React, useState } from \"react\";\nimport \"./Login.css\";\nimport Button from \"react-bootstrap/Button\";\nimport GenHeader from \"../../GenHeader.js\";\nimport LoginForm from \"./LoginForm\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n  const [authenticate, setAuthenticate] = useState(\"false\"); //true when user exists in database\n  const [userType, setUserType] = useState(\"\"); //customer, driver, restuarant\n  const [userID, setUserID] = useState(\"\");\n  const history = useHistory();\n\n  //Handles the submission of login details\n  const submitLogin = (details) => {\n    var obj = new Object();\n    obj.username = details.email;\n    obj.passHash = details.password;\n    //testing purposes\n    console.log(details);\n\n    fetchAuthentication(obj);\n    setUserType(details.userType);\n\n    //Determine what to do based on the user type\n    if (userType == \"Customer\") {\n      fetchCustomer(details.email);\n      history.push(\"/customer-dashboard\");\n      return;\n    } else if (userType == \"Restaurant\") {\n      fetchRestauant(details.email);\n      history.push(\"/restaurant-dash\");\n      return;\n    } else if (userType == \"Driver\") {\n      fetchDriver(details.email);\n      history.push(\"/driver-dash\");\n      return;\n    }\n  };\n\n  //Calls database to get the authenticate the user\n  //TODO: CURRENTLY NOT WORKING TO AUTHENTICATE USER - ASSUME TRUE FOR ALL CALLS FOR MVP\n  const fetchAuthentication = (obj) => {\n    setAuthenticate(\"true\");\n    // const reqPar = {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify(obj)\n    // }\n    // console.log(reqPar.body);\n    // fetch(\"/\", reqPar).then(res => res.json())\n    //   .then(data => setAuthenticate(data.reply))\n    //   .catch(err => console.log(err));\n  };\n\n  //Gets Customer Details\n  const fetchCustomer = (username) => {\n    const res = fetch(\"/customer/user/\" + username)\n      .then((resp) => resp.json())\n      .then((data) => setUserID(data._Customer__id))\n      .catch((err) => console.log(err));\n  };\n  //Gets Restaurant Details\n  const fetchRestauant = (username) => {\n    const res = fetch(\"/restaurant/user/\" + username)\n      .then((resp) => resp.json())\n      .then((data) => setUserID(data._Restaurant__id))\n      .catch((err) => console.log(err));\n  };\n  //Gets Driver Details\n  const fetchDriver = (username) => {\n    const res = fetch(\"/driver/user/\" + username)\n      .then((resp) => resp.json())\n      .then((data) => setUserID(data._Driver__id))\n      .then(history.push(\"/customer-dashboard\", { state: userID }))\n\n      .catch((err) => console.log(err));\n  };\n  return (\n    <div className=\"app\" data-testid=\"login-1\">\n      <GenHeader></GenHeader>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <LoginForm onLogin={submitLogin} />\n      </div>\n\n      <div className=\"or\">\n        <p>\n          <strong>OR</strong>\n        </p>\n        <p className=\"signupText\">Sign up as</p>\n      </div>\n      <div className=\"register-buttons\">\n        <Button\n          href=\"/customer-signup\"\n          variant=\"primary\"\n          data-testid=\"customer-signup\"\n        >\n          Customer\n        </Button>\n        &nbsp;\n        <Button\n          href=\"/driver-signup\"\n          variant=\"primary\"\n          data-testid=\"driver-signup\"\n        >\n          Driver\n        </Button>\n        &nbsp;\n        <Button\n          href=\"/restaurant-regis\"\n          variant=\"primary\"\n          data-testid=\"restaurant-signup\"\n        >\n          Restaurant\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}