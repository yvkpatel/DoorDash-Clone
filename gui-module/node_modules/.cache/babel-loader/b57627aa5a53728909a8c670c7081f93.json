{"ast":null,"code":"var _jsxFileName = \"/Users/yash/DoorDash-Clone/gui-module/src/components/general/signup/DriverSignup.js\",\n    _s = $RefreshSig$();\n\n/**\n * This is the page for driver's to signup to YUMI\n *\n * For MVP the password confirm does not confirm if passwords are the same\n */\nimport Header from \"../../GenHeader\";\nimport { React, useState } from \"react\";\nimport \"./signup.css\";\nimport SignupForm from \"./SignupForm\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DriverSignup = () => {\n  _s();\n\n  //temperary used for MVP since DB connection not working\n  const [tempAdded, setTempAdded] = useState(false); //return from DB to establish if user created. True = successful, false = user exists\n\n  const [addedDriver, setAddedDriver] = useState(\"\");\n  const history = useHistory(); //controls what happens when the user presses \"Create Account\"\n\n  const submitDetails = userDetails => {\n    var obj = new Object();\n    obj.username = userDetails.email;\n    obj.passHash = userDetails.password;\n    obj.name = userDetails.firstName + \" \" + userDetails.lastName;\n    console.log({\n      obj\n    });\n    fetchAddDriver(obj);\n  }; //Calls database to get add the user\n  //TODO: CURRENTLY NOT WORKING. ADDS USER BUT RETURNS REPLY FALSE ALWAYS - ASSUME TRUE FOR ALL CALLS FOR MVP\n\n\n  const fetchAddDriver = obj => {\n    const reqPar = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(obj)\n    };\n    console.log(reqPar.body);\n    fetch(\"/driver/add\", reqPar).then(res => res.json()).then(data => setAddedDriver(data), alert(\"account created\"), history.push(\"/\")).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Driver Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignupForm, {\n      onSignUp: submitDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DriverSignup, \"4FHbmFxx3ywH2PaKmFyd/0pO0ns=\", false, function () {\n  return [useHistory];\n});\n\n_c = DriverSignup;\nexport default DriverSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverSignup\");","map":{"version":3,"sources":["/Users/yash/DoorDash-Clone/gui-module/src/components/general/signup/DriverSignup.js"],"names":["Header","React","useState","SignupForm","useHistory","DriverSignup","tempAdded","setTempAdded","addedDriver","setAddedDriver","history","submitDetails","userDetails","obj","Object","username","email","passHash","password","name","firstName","lastName","console","log","fetchAddDriver","reqPar","method","headers","body","JSON","stringify","fetch","then","res","json","data","alert","push","catch","err"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C,CAFyB,CAGzB;;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMQ,OAAO,GAAGN,UAAU,EAA1B,CALyB,CAOzB;;AACA,QAAMO,aAAa,GAAIC,WAAD,IAAiB;AACrC,QAAIC,GAAG,GAAG,IAAIC,MAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,QAAJ,GAAeH,WAAW,CAACI,KAA3B;AACAH,IAAAA,GAAG,CAACI,QAAJ,GAAeL,WAAW,CAACM,QAA3B;AACAL,IAAAA,GAAG,CAACM,IAAJ,GAAWP,WAAW,CAACQ,SAAZ,GAAwB,GAAxB,GAA8BR,WAAW,CAACS,QAArD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEV,MAAAA;AAAF,KAAZ;AACAW,IAAAA,cAAc,CAACX,GAAD,CAAd;AACD,GAPD,CARyB,CAiBzB;AACA;;;AACA,QAAMW,cAAc,GAAIX,GAAD,IAAS;AAC9B,UAAMY,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFI;AAGbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,GAAf;AAHO,KAAf;AAKAS,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAM,CAACG,IAAnB;AACAG,IAAAA,KAAK,CAAC,aAAD,EAAgBN,MAAhB,CAAL,CACGO,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,IAAD,IAAU1B,cAAc,CAAC0B,IAAD,CAH5B,EAIIC,KAAK,CAAC,iBAAD,CAJT,EAKI1B,OAAO,CAAC2B,IAAR,CAAa,GAAb,CALJ,EAOGC,KAPH,CAOUC,GAAD,IAASjB,OAAO,CAACC,GAAR,CAAYgB,GAAZ,CAPlB;AAQD,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAE5B;AAAtB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA7CD;;GAAMN,Y;UAKYD,U;;;KALZC,Y;AA+CN,eAAeA,YAAf","sourcesContent":["/**\n * This is the page for driver's to signup to YUMI\n *\n * For MVP the password confirm does not confirm if passwords are the same\n */\nimport Header from \"../../GenHeader\";\nimport { React, useState } from \"react\";\nimport \"./signup.css\";\nimport SignupForm from \"./SignupForm\";\nimport { useHistory } from \"react-router-dom\";\nconst DriverSignup = () => {\n  //temperary used for MVP since DB connection not working\n  const [tempAdded, setTempAdded] = useState(false);\n  //return from DB to establish if user created. True = successful, false = user exists\n  const [addedDriver, setAddedDriver] = useState(\"\");\n  const history = useHistory();\n\n  //controls what happens when the user presses \"Create Account\"\n  const submitDetails = (userDetails) => {\n    var obj = new Object();\n    obj.username = userDetails.email;\n    obj.passHash = userDetails.password;\n    obj.name = userDetails.firstName + \" \" + userDetails.lastName;\n    console.log({ obj });\n    fetchAddDriver(obj);\n  };\n\n  //Calls database to get add the user\n  //TODO: CURRENTLY NOT WORKING. ADDS USER BUT RETURNS REPLY FALSE ALWAYS - ASSUME TRUE FOR ALL CALLS FOR MVP\n  const fetchAddDriver = (obj) => {\n    const reqPar = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(obj),\n    };\n    console.log(reqPar.body);\n    fetch(\"/driver/add\", reqPar)\n      .then((res) => res.json())\n      .then(\n        (data) => setAddedDriver(data),\n        alert(\"account created\"),\n        history.push(\"/\")\n      )\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"main\">\n      <Header></Header>\n      <h1>Driver Signup</h1>\n      {/*  Component for Signup form*/}\n      <SignupForm onSignUp={submitDetails} />\n      {/* <ChangePage/> */}\n    </div>\n  );\n};\n\nexport default DriverSignup;\n"]},"metadata":{},"sourceType":"module"}