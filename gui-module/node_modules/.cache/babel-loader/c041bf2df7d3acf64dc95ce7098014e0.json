{"ast":null,"code":"var _jsxFileName = \"/Users/yash/DoorDash-Clone/gui-module/src/components/customer/payment/PaymentPage.js\",\n    _s = $RefreshSig$();\n\n/**\n * This is the payment page where a customer can see the finished order and submit payment details\n */\nimport { React, useState, useEffect } from \"react\";\nimport Header from \"../../Header\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Payment from \"./Payment\";\nimport OrderSummary from \"./OrderSummary\";\nimport Container from \"react-bootstrap/Container\"; // import PaymentForm from \"../components/PaymentForm\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentPage = props => {\n  _s();\n\n  //Will pull Order Item List from Database\n  const [paydetails, setPayDetails] = useState({});\n  const [customerDetails, setCustomer] = useState({});\n  const st = props.location.state;\n  console.log(props);\n  const history = useHistory(); //Gets order items on page and gets customer details => FAKE SERVER FOR NOW :)\n\n  useEffect(() => {\n    // const getItems = async () => {\n    //   const itemsFromServer = await fetchItems()\n    //   setItems(itemsFromServer)\n    // }\n    const getCustomer = async () => {\n      const custFromServer = await fetchCustomer(\"C235771756\");\n    }; // getItems()\n\n\n    getCustomer();\n  }, []); //Deletes object from database after payment. Temporary to reduce frontend database\n  // useEffect(()=>{\n  //   deletePayment();\n  // },[paydetails])\n  //Fetch Order Items\n  // const fetchItems = async () => {\n  //   const res = await fetch('http://localhost:5000/items')\n  //   const data = await res.json()\n  //   return data\n  // }\n  //Fetch Customer Details\n\n  const fetchCustomer = id => {\n    const res = fetch(\"/customer/id/\" + id).then(resp => resp.json()).then(data => setCustomer(data)).catch(err => console.log(err));\n  }; //This creates a JSON file as requested by the payment team\n\n\n  const makePayJson = props => {\n    var obj = new Object(); //TODO change obj items to all required things\n\n    obj.ccv = props.cardCVV;\n    obj.card_number = props.cardNumber;\n    obj.expiry = props.cardExpiry;\n    obj.name = customerDetails.name;\n    obj.postal_code = customerDetails.postal_code; //TODO: fill with real info from backend\n\n    obj.total = \"$420.69\";\n    var JSONstring = JSON.stringify(obj, null, 2); //print (just for testing) - REMOVE LATER\n\n    alert(JSONstring);\n    return JSONstring;\n  }; // const sendPayment = async (props) => {\n  //   const payJson = makePayJson(props);\n  //   // const res = await fetch('http://localhost:5000/payment', {\n  //   //   method: 'POST',\n  //   //   headers: {\n  //   //     'Content-type': 'application/json'\n  //   //   },\n  //   //   body: payJson,\n  //   // })\n  //   // const data = await res.json();\n  //   //setPayDetails(data);\n  //   console.log(paydetails);\n  //   return data;\n  // }\n  // const deletePayment = async () => {\n  //   await fetch('http://localhost:5000/payment/1', {\n  //     method: 'DELETE',\n  //   })\n  // }\n  //TODO: pull from the backend\n\n\n  var cost = 0;\n  var items = [];\n\n  if (st != null) {\n    cost = st.cart.price;\n    items = st.cart.itemList;\n  } //This function will handle how payment of the order is handled\n\n\n  const submitPayment = cardDetails => {\n    console.log(customerDetails._Customer__name);\n    history.push(\"../customermap\"); // const data = sendPayment(cardDetails);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    \"data-testid\": \"payment-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 8,\n          children: [\" \", /*#__PURE__*/_jsxDEV(OrderSummary, {\n            itemList: items,\n            cost: cost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          md: 4,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Payment, {\n            onPay: submitPayment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentPage, \"IeE85CWmJycR2o6Okk9FKq9R3Qo=\", false, function () {\n  return [useHistory];\n});\n\n_c = PaymentPage;\nexport default PaymentPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"sources":["/Users/yash/DoorDash-Clone/gui-module/src/components/customer/payment/PaymentPage.js"],"names":["React","useState","useEffect","Header","Row","Col","Payment","OrderSummary","Container","useHistory","PaymentPage","props","paydetails","setPayDetails","customerDetails","setCustomer","st","location","state","console","log","history","getCustomer","custFromServer","fetchCustomer","id","res","fetch","then","resp","json","data","catch","err","makePayJson","obj","Object","ccv","cardCVV","card_number","cardNumber","expiry","cardExpiry","name","postal_code","total","JSONstring","JSON","stringify","alert","cost","items","cart","price","itemList","submitPayment","cardDetails","_Customer__name","push"],"mappings":"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","sourcesContent":["/**\n * This is the payment page where a customer can see the finished order and submit payment details\n */\nimport { React, useState, useEffect } from \"react\";\nimport Header from \"../../Header\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Payment from \"./Payment\";\nimport OrderSummary from \"./OrderSummary\";\nimport Container from \"react-bootstrap/Container\";\n// import PaymentForm from \"../components/PaymentForm\";\nimport { useHistory } from \"react-router-dom\";\n\nconst PaymentPage = (props) => {\n  //Will pull Order Item List from Database\n  const [paydetails, setPayDetails] = useState({});\n  const [customerDetails, setCustomer] = useState({});\n  const st = props.location.state;\n  console.log(props);\n  const history = useHistory();\n\n  //Gets order items on page and gets customer details => FAKE SERVER FOR NOW :)\n  useEffect(() => {\n    // const getItems = async () => {\n    //   const itemsFromServer = await fetchItems()\n    //   setItems(itemsFromServer)\n    // }\n    const getCustomer = async () => {\n      const custFromServer = await fetchCustomer(\"C235771756\");\n    };\n    // getItems()\n    getCustomer();\n  }, []);\n\n  //Deletes object from database after payment. Temporary to reduce frontend database\n  // useEffect(()=>{\n  //   deletePayment();\n  // },[paydetails])\n\n  //Fetch Order Items\n  // const fetchItems = async () => {\n  //   const res = await fetch('http://localhost:5000/items')\n  //   const data = await res.json()\n\n  //   return data\n  // }\n\n  //Fetch Customer Details\n  const fetchCustomer = (id) => {\n    const res = fetch(\"/customer/id/\" + id)\n      .then((resp) => resp.json())\n      .then((data) => setCustomer(data))\n      .catch((err) => console.log(err));\n  };\n\n  //This creates a JSON file as requested by the payment team\n  const makePayJson = (props) => {\n    var obj = new Object();\n    //TODO change obj items to all required things\n    obj.ccv = props.cardCVV;\n    obj.card_number = props.cardNumber;\n    obj.expiry = props.cardExpiry;\n\n    obj.name = customerDetails.name;\n    obj.postal_code = customerDetails.postal_code;\n    //TODO: fill with real info from backend\n    obj.total = \"$420.69\";\n    var JSONstring = JSON.stringify(obj, null, 2);\n\n    //print (just for testing) - REMOVE LATER\n    alert(JSONstring);\n    return JSONstring;\n  };\n\n  // const sendPayment = async (props) => {\n  //   const payJson = makePayJson(props);\n  //   // const res = await fetch('http://localhost:5000/payment', {\n  //   //   method: 'POST',\n  //   //   headers: {\n  //   //     'Content-type': 'application/json'\n  //   //   },\n  //   //   body: payJson,\n  //   // })\n  //   // const data = await res.json();\n  //   //setPayDetails(data);\n  //   console.log(paydetails);\n  //   return data;\n  // }\n\n  // const deletePayment = async () => {\n  //   await fetch('http://localhost:5000/payment/1', {\n  //     method: 'DELETE',\n  //   })\n  // }\n\n  //TODO: pull from the backend\n  var cost = 0;\n  var items = [];\n  if (st != null) {\n    cost = st.cart.price;\n    items = st.cart.itemList;\n  }\n\n  //This function will handle how payment of the order is handled\n  const submitPayment = (cardDetails) => {\n    console.log(customerDetails._Customer__name);\n    history.push(\"../customermap\");\n    // const data = sendPayment(cardDetails);\n  };\n\n  return (\n    <div className=\"App\" data-testid=\"payment-page\">\n      <Header />\n      <Container>\n        <Row>\n          <Col xs={12} md={8}>\n            {\" \"}\n            {/*  Component to display order summary */}\n            <OrderSummary itemList={items} cost={cost} />\n          </Col>\n          <Col xs={6} md={4}>\n            {\" \"}\n            {/*  Component to display payment form */}\n            {/* <PaymentForm/> */}\n            <Payment onPay={submitPayment} />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default PaymentPage;\n"]},"metadata":{},"sourceType":"module"}