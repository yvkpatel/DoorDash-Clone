{"ast":null,"code":"var _jsxFileName = \"/Users/yash/DoorDash-Clone/gui-module/src/components/DashList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*  DashList.js\n    Component that acts as a container for cards displayed in a veritcal list.\n\n    === Props ===\n    itemList = list of the items to be displayed in each of the cards.\n        Example: const [listVar] = useState([{ id: 1, title: 'Card 1'}, { id: 2, title: 'Card 2'}]);\n\n    component = the component that will be used for each of the cards.\n\n    manager = class that will provide methods that may be called from the card.\n*/\nconst List = _ref => {\n  let {\n    itemList,\n    component,\n    manager\n  } = _ref;\n  const Component = component;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    \"data-testid\": \"dash-list\",\n    children: itemList ? itemList.map(item => /*#__PURE__*/_jsxDEV(Component, {\n      item: item,\n      manager: manager\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)) : \"Loading:...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/yash/DoorDash-Clone/gui-module/src/components/DashList.js"],"names":["List","itemList","component","manager","Component","map","item","id"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,IAAI,GAAG,QAAsC;AAAA,MAArC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAqC;AACjD,QAAMC,SAAS,GAAGF,SAAlB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,mBAAY,WAAlC;AAAA,cACGD,QAAQ,GACLA,QAAQ,CAACI,GAAT,CAAcC,IAAD,iBACX,QAAC,SAAD;AAAyB,MAAA,IAAI,EAAEA,IAA/B;AAAqC,MAAA,OAAO,EAAEH;AAA9C,OAAgBG,IAAI,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,YADF,CADK,GAIL;AALN;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAZD;;KAAMP,I;AAcN,eAAeA,IAAf","sourcesContent":["/*  DashList.js\n    Component that acts as a container for cards displayed in a veritcal list.\n\n    === Props ===\n    itemList = list of the items to be displayed in each of the cards.\n        Example: const [listVar] = useState([{ id: 1, title: 'Card 1'}, { id: 2, title: 'Card 2'}]);\n\n    component = the component that will be used for each of the cards.\n\n    manager = class that will provide methods that may be called from the card.\n*/\n\nconst List = ({ itemList, component, manager }) => {\n  const Component = component;\n\n  return (\n    <div className=\"list\" data-testid=\"dash-list\">\n      {itemList\n        ? itemList.map((item) => (\n            <Component key={item.id} item={item} manager={manager} />\n          ))\n        : \"Loading:...\"}\n    </div>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}